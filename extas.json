{
  "name": "deflou/core",
  "package_classes": [
    {
      "interface": "deflou\\interfaces\\applications\\activities\\IActivityRepository",
      "class": "deflou\\components\\applications\\activities\\ActivityRepository"
    },
    {
      "interface": "deflou\\interfaces\\applications\\activities\\IActivitySampleRepository",
      "class": "deflou\\components\\applications\\activities\\ActivitySampleRepository"
    },
    {
      "interface": "deflou\\interfaces\\applications\\anchors\\IAnchorRepository",
      "class": "deflou\\components\\applications\\anchors\\AnchorRepository"
    },
    {
      "interface": "deflou\\interfaces\\applications\\IApplicationRepository",
      "class": "deflou\\components\\applications\\ApplicationRepository"
    },
    {
      "interface": "deflou\\interfaces\\applications\\IApplicationSampleRepository",
      "class": "deflou\\components\\applications\\ApplicationSampleRepository"
    },
    {
      "interface": "deflou\\interfaces\\fields\\types\\IFieldTypeRepository",
      "class": "deflou\\components\\fields\\types\\FieldTypeRepository"
    },
    {
      "interface": "deflou\\interfaces\\fields\\types\\IFieldTypeSampleRepository",
      "class": "deflou\\components\\fields\\types\\FieldTypeSampleRepository"
    },
    {
      "interface": "deflou\\interfaces\\fields\\IFieldRepository",
      "class": "deflou\\components\\fields\\FieldRepository"
    },
    {
      "interface": "deflou\\interfaces\\fields\\IFieldSampleRepository",
      "class": "deflou\\components\\fields\\FieldSampleRepository"
    },
    {
      "interface": "deflou\\interfaces\\triggers\\ITriggerRepository",
      "class": "deflou\\components\\triggers\\TriggerRepository"
    },
    {
      "interface": "deflou\\interfaces\\triggers\\ITriggerSampleRepository",
      "class": "deflou\\components\\triggers\\TriggerSampleRepository"
    },
    {
      "interface": "deflou\\interfaces\\triggers\\ITriggerStateHistoryRepository",
      "class": "deflou\\components\\triggers\\TriggerStateHistoryRepository"
    },
    {
      "interface": "deflou\\interfaces\\triggers\\ITriggerResponseRepository",
      "class": "deflou\\components\\triggers\\TriggerResponseRepository"
    }
  ],
  "field_types": [
    {
      "name": "string20",
      "class": "\\FieldString",
      "parameters": {
        "min_length": {
          "name": "max_length",
          "value": 0
        },
        "max_length": {
          "name": "max_length",
          "value": 20
        }
      }
    }
  ],
  "field_type_samples": [
    {
      "name": "string",
      "class": "\\FieldString",
      "parameters": {
        "min_length": {
          "name": "max_length"
        },
        "max_length": {
          "name": "max_length"
        }
      }
    }
  ],
  "plugins": [
    {
      "class": "extas\\components\\plugins\\repositories\\PluginFieldSampleName",
      "stage": [
        "extas.applications.create.before",
        "extas.activities.create.before",
        "extas.triggers.create.before",
        "extas.fields.create.before",
        "extas.fields_types.create.before"
      ]
    },
    {
      "class": "extas\\components\\plugins\\repositories\\PluginFieldUuid",
      "stage": [
        "extas.triggers_responses.create.before",
        "extas.anchors.create.before"
      ]
    },
    {
      "class": [
        "deflou\\components\\plugins\\PluginInstallActivities",
        "deflou\\components\\plugins\\PluginInstallActivitySamples",
        "deflou\\components\\plugins\\PluginInstallAnchors",
        "deflou\\components\\plugins\\PluginInstallApplications",
        "deflou\\components\\plugins\\PluginInstallApplicationSamples",
        "deflou\\components\\plugins\\PluginInstallFields",
        "deflou\\components\\plugins\\PluginInstallFieldSamples",
        "deflou\\components\\plugins\\PluginInstallFieldTypes",
        "deflou\\components\\plugins\\PluginInstallFieldTypeSamples",
        "deflou\\components\\plugins\\PluginInstallTriggers",
        "deflou\\components\\plugins\\PluginInstallTriggerSamples",
        "deflou\\components\\plugins\\PluginInstallTriggerStateHistories"
      ],
      "stage": "extas.install"
    }
  ],
  "extensions": [
    {
      "class": "extas\\components\\extensions\\ExtensionHasCondition",
      "interface": "extas\\interfaces\\extensions\\IExtensionHasCondition",
      "methods": ["isConditionTrue", "getCondition", "getConditionName", "setConditionName"],
      "subject": "extas.sample.parameter"
    }
  ]
}